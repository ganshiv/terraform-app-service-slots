name: Swap App Service slots using Terraform

on:
  workflow_dispatch:
    inputs:
      active_app:
        description: 'The version of the app to put in production'
        required: true
        type: choice
        options:
          - blue
          - green

defaults:
  run:
    working-directory: infra

jobs:
  swap:
    runs-on: ubuntu-latest

    env:
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }}

    steps:
      - uses: actions/checkout@v3

      - name: Set-up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_active_app: ${{ inputs.active_app }}
